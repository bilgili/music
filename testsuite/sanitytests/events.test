#!/bin/sh

NP=4

write_configuration ()
{

method=$1
echo "Communication method: ${method}"

# this is music configuration file
cat <<EOF > ${MUSIC_DATA_PATH}/events.music
np=$(( ${NP}/2 ))
stoptime=1.0
[from]
  binary=${TEST_BINARY}/eventsource
  args=-b 1 10 ${MUSIC_DATA_PATH}/spikes
[to]
  binary=${TEST_BINARY}/eventlogger
  args=-b 2
  from.out -> to.in [10, ${method}]
EOF

}


# this is input data
cat <<\EOF > ${MUSIC_DATA_PATH}/spikes0.dat
# spikes
0.0	0
0.1	1
0.2	2
0.3	3
0.4	4
0.5	5
0.6	6
0.7	7
0.8	8
0.9	9
EOF

cat <<\EOF > ${MUSIC_DATA_PATH}/spikes1.dat
# spikes
0.0	9
0.1	0
0.2	1
0.3	2
0.4	3
0.5	4
0.6	5
0.7	6
0.8	7
0.9	8
EOF

# this is the output we should expect to see
cat <<\EOF > ${MUSIC_DATA_PATH}/ok
Rank 0: Event (0, 0) detected at 0
Rank 0: Event (1, 0.1) detected at 0.09
Rank 0: Event (2, 0.2) detected at 0.19
Rank 0: Event (3, 0.3) detected at 0.28
Rank 0: Event (4, 0.4) detected at 0.39
Rank 1: Event (5, 0.6) detected at 0.58
Rank 1: Event (6, 0.7) detected at 0.68
Rank 1: Event (7, 0.8) detected at 0.79
Rank 1: Event (8, 0.9) detected at 0.89
Rank 1: Event (9, 0) detected at 0
EOF
# sort the file using locale specified by current environment
sort ${MUSIC_DATA_PATH}/ok -o ${MUSIC_DATA_PATH}/ok

cat <<\EOF >errok
EOF

for method in point-to-point collective ; do
    write_configuration "${method}"
    command="`${MUSIC_BINARY} ${NP} ${MUSIC_DATA_PATH}/events.music 2> ${MUSIC_DATA_PATH}/err | sort -o ${MUSIC_DATA_PATH}/out`"
    echo "$command"
    if ${CMP} -s ${MUSIC_DATA_PATH}/out ${MUSIC_DATA_PATH}/ok; then
	echo "...OK"
    else
	echo "...FAILED" >&2
	#cat ${MUSIC_DATA_PATH}/ok >&2
	exit 2
    fi
done

if "$CMP" -s err errok; then
    :
else
    echo "err:" >&2
    cat err >&2
    echo "errok:" >&2
    cat errok >&2
    exit 10
fi

exit 0